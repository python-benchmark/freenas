<%
        def safe_call(*args):
            try:
                val = middleware.call_sync(*args)
            except:
                val = False
            return val

        uri = None
        base = None
        ssl = False
        tls_cacert = None
        tls_reqcert = 'allow'

        ldap_enabled = safe_call('notifier.common', 'system', 'ldap_enabled')
        ldap = safe_call('datastore.query', 'directoryservice.LDAP')
        if ldap and ldap[0]:
            ldap = ldap[0]
        else:
            ldap = None

        ad_enabled = safe_call('notifier.common', 'system', 'activedirectory_enabled')
        ad = safe_call('notifier.directoryservice', 'AD')

        if ad_enabled and ad:
            uri = "%s://%s" % ("ldaps" if ad['ssl'] == "on" else "ldap", ad['domainname'])
            base = ad['basedn']

            if ad['ssl'] in ("start_tls", "on"):
                tls_cacert = ad['certfile']
                ssl = ad['ssl']

            ad = safe_call('datastore.query', 'directoryservice.ActiveDirectory')
            if ad and ad[0]:
                ad = ad[0]
            else:
                ad = None

            #
            # So what if the AD server is configured to use SSL or TLS,
            # and the idmap backend is as well? WTF? whaddoyoudo?
            #
            if ad and ad['ad_idmap_backend'] in ("rfc2307", "ldap"):

                #
                # Inception
                #
                # DS_TYPE_ACTIVEDIRECTORY = 1
                idmap = safe_call('notifier.ds_get_idmap_object', 1, ad['id'], ad['ad_idmap_backend'])
                if idmap:
                    idmap_url = idmap['url']
                    idmap_url = re.sub('^(ldaps?://)', '', idmap_url)
                    uri = "%s://%s" % ("ldaps" if idmap['ssl'] == "on" else "ldap", idmap_url)

                    #
                    # Recursive inception
                    #
                    if idmap['ssl'] in ('start_tls', 'on'):
                        ca = safe_call('certificateauthority.query', [('id', '=', idmap['certificate']['id'])], {'get': True})
                        tls_cacert = ca['cert_ceritifcate_path']
                        ssl = idmap['ssl']

        elif ldap_enabled and ldap:
            uri = "%s://%s" % ("ldaps" if ldap['ldap_ssl'] == "on" else "ldap", ldap['ldap_hostname'])
            base = ldap['ldap_basedn']

            if ldap['ldap_ssl'] in ("start_tls", "on"):
                ca = safe_call('certificateauthority.query', [('id', '=', ldap['ldap_certificate']['id'])], {'get': True})
                tls_cacert = ca['certificate_path']
                ssl = ldap['ldap_ssl']
%>
% if (ldap_enabled and ldap) or (ad_enabled and ad):
URI ${uri}
BASE ${base}
    % if ssl:
SSL ${ssl}
        % if tls_cacert:
TLS_CACERT ${tls_cacert}
        % endif
TLS_REQCERT allow
    % endif
% endif
