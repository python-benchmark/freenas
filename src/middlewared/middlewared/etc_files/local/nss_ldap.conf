<%
        def safe_call(*args):
            try:
                val = middleware.call_sync(*args)
            except:
                val = False
            return val

        ldap = safe_call('datastore.query', 'directoryservice.LDAP')
        if ldap and ldap[0]:
            ldap = ldap[0]
            capath = None
            if ldap['ldap_certificate']:
                cert = safe_call('certificateauthority.query', [('id', '=', ldap['ldap_certificate']['id'])], {'get': True})
                if cert:
                    capath = cert['certificate_path']
        else:
            ldap = None

        ldap_enabled = safe_call('notifier.common', 'system', 'ldap_enabled')

        ldap_uri = "%s://%s" % ("ldaps" if ldap['ldap_ssl'] == "on" else "ldap", ldap['ldap_hostname'])

%>
% if ldap_enabled and ldap:
uri ${ldap_uri}
base ${ldap['ldap_basedn']}
    % if ldap['ldap_ssl'] in ('start_tls', 'on'):
ssl ${ldap['ldap_ssl']}
        % if capath:
tls_cacert ${capath}
        % endif
tls_reqcert allow
    % endif
scope sub
timelimit 30
bind_timelimit 30
bind_policy soft
nss_override_attribute_value loginShell /bin/sh
    % if ldap['ldap_auxiliary_parameters']:
${ldap['ldap_auxiliary_parameters']}
    % endif
% endif
